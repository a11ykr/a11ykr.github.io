---
import { Icon } from 'astro-icon/components'
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
	const members = await getCollection('members')
	return members.map((member) => {
		return {
			params: { member: member.data.userid },
			props: { member },
		}
	})
}

interface Props {
	member: CollectionEntry<'members'>
}

const { member } = Astro.props
console.log(member.data)
---

<aside class="member">
	<dl>
		<dt>{member.data.title}</dt>
		{
			member.data.img ? (
				<dd class="image">
					<img src={member.data.img} alt="" />
				</dd>
			) : (
				''
			)
		}
		<dd>{member.data.description}</dd>
		<dd>
			{
				member.data.homepage && (
					<a href={member.data.homepage}>
						<Icon name="ion:home" />
					</a>
				)
			}
			{
				member.data.github && (
					<a href={member.data.github}>
						<Icon name="ion:logo-github" />
					</a>
				)
			}
			{
				member.data.twitter && (
					<a href={member.data.twitter}>
						<Icon name="ion:logo-twitter" />
					</a>
				)
			}
			{
				member.data.facebook && (
					<a href={member.data.facebook}>
						<Icon name="ion:logo-facebook" />
					</a>
				)
			}
			{
				member.data.linkedin && (
					<a href={member.data.linkedin}>
						<Icon name="ion:logo-linkedin" />
					</a>
				)
			}
		</dd>
	</dl>
</aside>

<style lang="scss">
	.member {
		float: right;
		margin-bottom: 80px;
		max-width: 320px;
		dt,
		dd:not(.image) {
			margin-left: 74px;
		}
		dd a {
			display: inline-flex;
			padding: .4rem .2rem;
			font-size: 1.4rem;
		}
		img {
			display: block;
			float: left;
			margin-top: -1rem;
			margin-right: 10px;
			max-width: 64px;
		}
	}
</style>
